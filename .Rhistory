for (i in 1:2) {  #length(test)
test2 <- paste0(test2, test[i],"\\n")
}
test2
test3 <- fromJSON(test2)
test2 <- ""
for (i in 1:1) {  #length(test)
test2 <- paste0(test2, test[i])
}
test3 <- fromJSON(test2)
test2 <- ""
for (i in 2:2) {  #length(test)
test2 <- paste0(test2, test[i])
}
test3 <- fromJSON(test2)
test3
test2 <- ""
for (i in 1:2) {  #length(test)
test2 <- paste0(test2, test[i], collapse = "\n")
}
test3 <- fromJSON(test2)
test2
test2 <- ""
for (i in 1:2) {  #length(test)
test2 <- paste0(test2, test[i], sep = "\n")
}
test2
test2 <- ""
for (i in 1:2) {  #length(test)
test2 <- paste0(test2, test[i], collapse = ",")
}
test2
test[2]
test2 <- ""
for (i in 1:2) {  #length(test)
test2 <- paste0(test2, test[i], sep = ",")
}
test2
test3 <- fromJSON(test2)
test2 <- ""
for (i in 1:2) {  #length(test)
test2 <- paste0(test2, test[i], sep = ";")
}
test2
test3 <- fromJSON(test2)
test3 <- fromJSON(toJSON(test2))
test3
class(test2)
toJSON(test2)
test2 <- ""
for (i in 1:2) {  #length(test)
test2 <- paste0(test2, test[i])
}
test2
test3 <- fromJSON(toJSON(test2))
test3
test2 <- ""
for (i in 1:2) {  #length(test)
test2 <- paste0(test2, test[i])
}
test2
test3 <- fromJSON(toJSON(test2), simplifyDataFrame = TRUE)
test3
test2 <- ""
for (i in 1:2) {  #length(test)
test2 <- paste0(test2, test[i] sep=",")
}
test3 <- fromJSON(toJSON(test2))
test2 <- ""
for (i in 1:2) {  #length(test)
test2 <- paste0(test2, test[i], sep=",")
}
test3 <- fromJSON(toJSON(test2))
test3 <- toJSON(test2)
test3
test4 <- fromJSON(test3, simplifyDataFrame = TRUE)
json <-
'[
{"Name" : "Mario", "Age" : 32, "Occupation" : "Plumber"},
{"Name" : "Peach", "Age" : 21, "Occupation" : "Princess"},
{},
{"Name" : "Bowser", "Occupation" : "Koopa"}
]'
mydf <- fromJSON(json)
mydf
test3
json <- '["{"Vertical":"Personal Loans","Registration Platform":"Unknown","User Device":"Personal Computer","applicationType":"SECURE_SITE","Homeowner":"No","Registration Completed Year":"2013","Logged In Count":38,"Delinquent Accounts":0,"Number of Days Since Registration":672,"Client IP":"157.130.196.214, 157.130.196.214","Product Offer":"Undefined","DTI Band":"B","Derogatory Accounts":0,"State of Residence":"KY","Logged In":"Yes","Registration Completed Month":"2013-08","Operating System":"Windows","Browser Version":"43.0.2357.124","Registration Completed Date":"2013-08-13","Collections":0,"Last Refresh Date":"2015-06-02","Approval Time":0,"Last Email Click":"","mp_name_tag":"5c61ba4c-a342-4617-98c3-dcf600dd21b1","PPC Campaign":"Undefined","Payment History":"A","CS Band II":"Average","CS Band I":25,"RU Registration Date":"2013-08-13","distinct_id":"5c61ba4c-a342-4617-98c3-dcf600dd21b1","Bankruptcies":0,"Logged in 30 days":"Yes","Site":"Secure","Late Payments":0,"CS Band III":"Fair","DTI Ratio":23,"Debt Amount - Auto Loans":0,"Registration Completed Week":"2013-08-18","Source":"Logged In User","isFakeEvent":false,"CM Enabled":"Yes","OS Version":"6.1","Total Balances":14720,"Bankruptcy History":"No","Card Name":0,"Open Trade Lines - All":13,"RU Tenure":22,"Test SSN User":"No","Reported Income":"11-20k","Loan Amount":4000,"User Browser":"Chrome","Account Mix":"D","Partner":"Prosper","Offer APR":0,"Age":40,"Credit Limit":43100,"Debt Amount - Credit Cards":14720,"Amount":250,"Credit Utilization":"C","Open Trade Lines - Credit Cards":13,"Page Name":"PL Marketplace","Debt Amount - Student Loans":0,"Downsell":0,"Last Login":"2015-06-05","Debt Amount - All":14720,"Page Form Factor":"Web","Customer Type":"Free RU","Foreclosures":0,"Debt Amount - Home Loans":0,"Credit Inquiries":"D","time":1433206854,"Score Type":"TU VANTAGE 3","RU Registration Month":"Aug","Session_Id":"00aa9c41-346d-4bfb-96ba-0981c2096276","Debt Amount - Other":0,"Age of Credit History":"C"},{"Vertical":"Personal Loans","Site":"Public","Approval Time":0,"Amount":250,"PPC Campaign":"PL Google PPC","Page Name":"Personal Loan Offers PPC Landing","Downsell":0,"Source":"PPC","Page Form Factor":"Web","isFakeEvent":false,"Product Offer":"Undefined","distinct_id":"unl39525-d895-488d-b5dc-6cc38f0c3fc3","Card Name":0,"time":1433185924,"Loan Amount":8000,"Partner":"Prosper","Offer APR":0}"]'
mydf <- fromJSON(json)
json <- '[{"Vertical":"Personal Loans","Registration Platform":"Unknown","User Device":"Personal Computer","applicationType":"SECURE_SITE","Homeowner":"No","Registration Completed Year":"2013","Logged In Count":38,"Delinquent Accounts":0,"Number of Days Since Registration":672,"Client IP":"157.130.196.214, 157.130.196.214","Product Offer":"Undefined","DTI Band":"B","Derogatory Accounts":0,"State of Residence":"KY","Logged In":"Yes","Registration Completed Month":"2013-08","Operating System":"Windows","Browser Version":"43.0.2357.124","Registration Completed Date":"2013-08-13","Collections":0,"Last Refresh Date":"2015-06-02","Approval Time":0,"Last Email Click":"","mp_name_tag":"5c61ba4c-a342-4617-98c3-dcf600dd21b1","PPC Campaign":"Undefined","Payment History":"A","CS Band II":"Average","CS Band I":25,"RU Registration Date":"2013-08-13","distinct_id":"5c61ba4c-a342-4617-98c3-dcf600dd21b1","Bankruptcies":0,"Logged in 30 days":"Yes","Site":"Secure","Late Payments":0,"CS Band III":"Fair","DTI Ratio":23,"Debt Amount - Auto Loans":0,"Registration Completed Week":"2013-08-18","Source":"Logged In User","isFakeEvent":false,"CM Enabled":"Yes","OS Version":"6.1","Total Balances":14720,"Bankruptcy History":"No","Card Name":0,"Open Trade Lines - All":13,"RU Tenure":22,"Test SSN User":"No","Reported Income":"11-20k","Loan Amount":4000,"User Browser":"Chrome","Account Mix":"D","Partner":"Prosper","Offer APR":0,"Age":40,"Credit Limit":43100,"Debt Amount - Credit Cards":14720,"Amount":250,"Credit Utilization":"C","Open Trade Lines - Credit Cards":13,"Page Name":"PL Marketplace","Debt Amount - Student Loans":0,"Downsell":0,"Last Login":"2015-06-05","Debt Amount - All":14720,"Page Form Factor":"Web","Customer Type":"Free RU","Foreclosures":0,"Debt Amount - Home Loans":0,"Credit Inquiries":"D","time":1433206854,"Score Type":"TU VANTAGE 3","RU Registration Month":"Aug","Session_Id":"00aa9c41-346d-4bfb-96ba-0981c2096276","Debt Amount - Other":0,"Age of Credit History":"C"},{"Vertical":"Personal Loans","Site":"Public","Approval Time":0,"Amount":250,"PPC Campaign":"PL Google PPC","Page Name":"Personal Loan Offers PPC Landing","Downsell":0,"Source":"PPC","Page Form Factor":"Web","isFakeEvent":false,"Product Offer":"Undefined","distinct_id":"unl39525-d895-488d-b5dc-6cc38f0c3fc3","Card Name":0,"time":1433185924,"Loan Amount":8000,"Partner":"Prosper","Offer APR":0}]'
mydf <- fromJSON(json)
mydf
test[1]
subs('"',"",test[2])
sub('"',"",test[2])
test[2]
gsub('"',"",test[2])
test2
test5 <- fromJSON(test2)
test4
test3
sub('[\"',"[",test3)
sub('\[\"',"[",test3)
sub('\\[\"',"[",test3)
test3 <- gsub('\\[\"',"[",test3)
test3 <- gsub(',\"\\]',"]",test3)
test3
test4 <- fromJSON(test3, simplifyDataFrame = TRUE)
test3 <- gsub('\\\]',"",test3)
test3 <- gsub('\\\',"",test3)
\
""
)
test3 <- gsub('\\\\',"",test3)
test3
test4 <- fromJSON(test3, simplifyDataFrame = TRUE)
View(test4)
test2 <- ""
for (i in 1:length(test)) {  #length(test)
test2 <- paste0(test2, subs('"',"",test[i]), sep=",")
}
test2 <- ""
for (i in 1:length(test)) {  #length(test)
test2 <- paste0(test2, test[i], sep=",")
}
test3 <- toJSON(test2)
test3 <- gsub('\\[\"',"[",test3)
test3 <- gsub(',\"\\]',"]",test3)
test3 <- gsub('\\\\',"",test3)
test4 <- fromJSON(test3, simplifyDataFrame = TRUE)
test4 <- fromJSON(test3, simplifyDataFrame = TRUE)
names(test3)
names(test4)
nrow(revenue_amj)
revenue_amj[1]
revenue_amj[1,]
test4[1]
revenue_amj[1,]
test4[,1]
test4[1,]
revenue_amj[1,]
test4[15,]
revenue_amj[15,]
revenue_amj[253,]
test4[253,]
test4[1245,]
revenue_amj[1245,]
revenue_amj[6278,]
test4[6278,]
revenue_amj[9277,]
test4[9277,]
test4[14000,]
revenue_amj[14000,]
revenue_amj[14001,]
revenue_amj[14002,]
nrow(test4)
revenue_amj[14016,]
test4[14016,]
sum(is.na(test4$`Registration Completed Month`))
test4[1,]
names(revenue_amj)
missing_reg_info <- revenue_amj[is.na(test4$`Registration Completed Month`),]
head(missing_reg_info)
min(missing_reg_info$saleDate)
max(missing_reg_info$saleDate)
sum(revenue_amj$userToken %in% c("NoUsertoken", "undefined"))
sum(revenue_amj$userToken !(%in% c("NoUsertoken", "undefined")))
sum(revenue_amj$userToken !(%in%) c("NoUsertoken", "undefined"))
sum(revenue_amj$userToken !%in% c("NoUsertoken", "undefined"))
sum(revenue_amj$userToken %in% c("NoUsertoken", "undefined"))
sum(!(revenue_amj$userToken %in% c("NoUsertoken", "undefined")))
names(test4)
head(unique(test4$`CS Band I`))
sum(is.na(test4$`CS Band I`))
sum(is.na(test4$`CS Band II`))
sum(is.na(test4$`Opt-Prod: New UI Overview (2973761749)`))
revenue_amj[is.na(test4$`Opt-Prod: New UI Overview (2973761749)`),]
revenue_amj[!is.na(test4$`Opt-Prod: New UI Overview (2973761749)`),]
names(test4)
revenue_amj[9427,]
revenue_amj
names(revenue_amj)
names(revenue_amj$propertiesJson)
revenue_amj[9427,4]
revenue_amj[1111,4]
names(test4)
JSON4 <- fromJSON(JSON3, simplifyDataFrame = TRUE)
JSON4 <- test4
JSON5 <- JSON4[, c(58, 71, 1, 50, 11, 61, 66, 33, 53, 25, 92, 30, 78, 77)]
names(JSON5) <- c("amountReported", "timeClicked", "verticalName", "loanAmount", "prodVendorID", "pageName", "store", "storeType", "vendorName", "PPCCampaignName", "prodBannerVersion", "userToken", "pageObjectName", "referralType")
head(JSON5)
class(JSON5$timeClicked)
as.POSIXct(1433206854)
as.POSIXct(1433206854, origin = "1970-01-01")
JSON5 <- mutate(JSON5, timeClicked = as.POSIXct(timeClicked, origin = "1970-01-01"))
head(JSON5)
JSON5 <- JSON4[, c(58, 71, 1, 50, 11, 61, 66, 33, 53, 25, 92, 30, 78, 77, 9, 19)]
## Assign correct field names
names(JSON5) <- c("amountReported", "timeClicked", "verticalName", "loanAmount", "prodVendorID", "pageName", "store", "storeType", "vendorName", "PPCCampaignName", "prodBannerVersion", "userToken", "pageObjectName", "referralType", "numDaysSinceReg", "regCompleteDate")
## Convert the time click from second to date
JSON5 <- mutate(JSON5, timeClicked = as.POSIXct(timeClicked, origin = "1970-01-01"))
head(JSON5)
class(JSON5$regCompleteDate)
JSON5 <- mutate(JSON5, regCompleteDate = ymd(regCompleteDate))
head(JSON5)
class(JSON5$regCompleteDate)
revenue_amj_all <- cbind(revenue_amj, JSON5)
length(unique(filter(revenue_amj_all$regCompleteDate >= ymd("150401"))))
length(unique(filter(revenue_amj_all, regCompleteDate >= ymd("150401"))))
names(revenue_amj_all)
JSON5 <- JSON4[, c(58, 71, 1, 50, 11, 61, 66, 33, 53, 25, 92, 30, 78, 77, 9, 19)]
## Assign correct field names
names(JSON5) <- c("amountReported", "timeClicked", "verticalName", "loanAmount", "prodVendorID", "pageName", "store", "storeType", "vendorName", "PPCCampaignName", "prodBannerVersion", "userToken", "pageObjectName", "referralType", "numDaysSinceReg", "regCompleteDate")
## Convert the time click from second to date
JSON5 <- transform(JSON5, timeClicked = as.POSIXct(timeClicked, origin = "1970-01-01"))
## Convert regCompleteDate to date format
JSON5 <- transform(JSON5, regCompleteDate = ymd(regCompleteDate))
revenue_amj_all <- cbind(revenue_amj, JSON5)
length(unique(filter(revenue_amj_all, regCompleteDate >= ymd("150401"))))
names(revenue_amj_all)
names(JSON5) <- c("amountReported", "timeClicked", "verticalName", "loanAmount", "prodVendorID", "pageName", "store", "storeType", "vendorName", "PPCCampaignName", "prodBannerVersion", "userToken2", "pageObjectName", "referralType", "numDaysSinceReg", "regCompleteDate")
## Convert the time click from second to date
JSON5 <- transform(JSON5, timeClicked = as.POSIXct(timeClicked, origin = "1970-01-01"))
## Convert regCompleteDate to date format
JSON5 <- transform(JSON5, regCompleteDate = ymd(regCompleteDate))
##--------- 4 Combine back into the main dataset
## Attach the converted JSON data to the original dataset
revenue_amj_all <- cbind(revenue_amj, JSON5)
length(unique(filter(revenue_amj_all, regCompleteDate >= ymd("150401"))))
length(unique(filter(revenue_amj_all, regCompleteDate < ymd("150401"))))
nrow(unique(filter(revenue_amj_all, regCompleteDate < ymd("150401"))))
nrow(unique(filter(revenue_amj_all, regCompleteDate >= ymd("150401"))))
revenue_amj_new <- filter(revenue_amj_all, regCompleteDate >= ymd("150401"))
revenue_amj_exit <- filter(revenue_amj_all, regCompleteDate < ymd("150401"))
table(revenue_amj_new$verticalName)
table(revenue_amj_exist$verticalName)
revenue_amj_exist <- filter(revenue_amj_all, regCompleteDate < ymd("150401"))
table(revenue_amj_exist$verticalName)
table(revenue_amj_new$verticalName, revenue_amj_new$vendorName)
table(revenue_amj_new$vendorName, revenue_amj_new$verticalName)
table(revenue_amj_exist$vendorName, revenue_amj_exist$verticalName)
boxplot(revenue_amj_new$numDaysSinceReg)
summary(revenue_amj_new$numDaysSinceReg)
summary(revenue_amj_all$saleDateTime - revenue_amj_all$regCompleteDate)
head(revenue_amj_all$saleDateTime - revenue_amj_all$regCompleteDate)
range(revenue_amj_all$saleDateTime - revenue_amj_all$regCompleteDate)
range(revenue_amj_all$saleDateTime - revenue_amj_all$regCompleteDate, na.rm = TRUE)
nrow(revenue_amj_all$saleDateTime<revenue_amj_all$regCompleteDate)
nrow(revenue_amj_all$saleDateTime>revenue_amj_all$regCompleteDate)
sum(is.na(revenue_amj_all$saleDateTime))
sum(is.na(revenue_amj_all$regCompleteDate))
range(filter(revenue_amj_all, !(is.na(revenue_amj_all$regCompleteDate))))
revenue_amj_all_clean <- filter(revenue_amj_all, !(is.na(revenue_amj_all$regCompleteDate)))
range(revenue_amj_all$saleDateTime - revenue_amj_all$regCompleteDate)
range(revenue_amj_all_clean$saleDateTime - revenue_amj_all_clean$regCompleteDate)
filter(revenue_amj_all_clean, (revenue_amj_all_clean$saleDateTime - revenue_amj_all_clean$regCompleteDate) == -3085262)
names(revenue_amj)
revenue_amj_all_clean <- filter(revenue_amj_all, !(is.na(revenue_amj_all$regCompleteDate))|revenue_amj_all$regCompleteDate>ymd("150630"))
range(revenue_amj_all_clean$saleDateTime - revenue_amj_all_clean$regCompleteDate)
nrow(revenue_amj_all$saleDate>revenue_amj_all$regCompleteDate)
nrow(revenue_amj_all$regCompleteDate>ymd("150630"))
max(revenue_amj_all$regCompleteDate)
max(revenue_amj_all$regCompleteDate, na.rm = TRUE)
ymd("150630")
length(revenue_amj_all$regCompleteDate>ymd("150630"))
length(revenue_amj_all$regCompleteDate<ymd("150630"))
sum(revenue_amj_all$regCompleteDate<ymd("150630"))
head(revenue_amj_all$regCompleteDate<ymd("150630"))
sum(revenue_amj_all$regCompleteDate>ymd("150630"))
max(revenue_amj_all_clean$regCompleteDate)
sum(revenue_amj_all_clean$regCompleteDate>ymd("150630"))
sum(revenue_amj_all$regCompleteDate>ymd("150630"))
sum(revenue_amj_all$regCompleteDate>ymd("150630"))
sum(revenue_amj_all[!(is.na(revenue_amj_all$regCompleteDate))]$regCompleteDate>ymd("150630"))
sum(revenue_amj_all[!(is.na(revenue_amj_all$regCompleteDate)), "regCompleteDate"]>ymd("150630"))
revenue_amj_all_reg <- filter(revenue_amj_all, !(is.na(revenue_amj_all$regCompleteDate)))
revenue_amj_all_clean <- filter(revenue_amj_all, !(is.na(regCompleteDate))|regCompleteDate>ymd("150630"))
nrow(filter(revenue_amj_all, !(is.na(regCompleteDate))|regCompleteDate>ymd("150630")))
nrow(filter(revenue_amj_all, !(is.na(regCompleteDate))))
nrow(filter(revenue_amj_all, regCompleteDate>ymd("150630")))
nrow(filter(revenue_amj_all, regCompleteDate>ymd("150630") | (is.na(regCompleteDate))))
nrow(filter(revenue_amj_all, regCompleteDate>ymd("150630") | !(is.na(regCompleteDate))))
revenue_amj_all_clean <- filter(revenue_amj_all, !(is.na(regCompleteDate)))
nrow(revenue_amj_all_clean)
revenue_amj_all_clean <- filter(revenue_amj_all_clean, regCompleteDate>ymd("150630"))
nrow(revenue_amj_all_clean)
revenue_amj_all_clean <- filter(revenue_amj_all, !(is.na(regCompleteDate)))
revenue_amj_all_clean <- filter(revenue_amj_all_clean, regCompleteDate<ymd("150630"))
nrow(revenue_amj_all_clean)
range(revenue_amj_all_clean$saleDateTime - revenue_amj_all_clean$regCompleteDate)
filter(revenue_amj_all_clean, (revenue_amj_all_clean$saleDateTime - revenue_amj_all_clean$regCompleteDate) == 1587656)
filter(revenue_amj_all_clean, (saleDateTime - regCompleteDate) == -1587656)
revenue_amj_all_reg_good <- filter(revenue_amj_all_clean, (saleDateTime - regCompleteDate) > -1587656)
range(revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate)
revenue_amj_all_reg_good <- filter(revenue_amj_all_clean, (saleDateTime - regCompleteDate) >=0)
range(revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate)
boxplot(revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate)
class((revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate))
boxplot(numeric(revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate))
boxplot(as.numeric(revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate))
24*60*60*1000
nday < -24*60*60*1000
nday <- 24*60*60*1000
range((revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate)/nday)
range((revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate)/nhour)
nhour <- 60*60*1000
range((revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate)/nhour)
boxplot((revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate)/nhour)
boxplot(as.numeric(revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate)/nhour))
boxplot(as.numeric(revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate)/nhour)
boxplot(as.numeric(revenue_amj_all_reg_good$timeClicked - revenue_amj_all_reg_good$regCompleteDate)/nhour)
boxplot(revenue_amj_all_reg_good$verticalName, as.numeric(revenue_amj_all_reg_good$timeClicked - revenue_amj_all_reg_good$regCompleteDate)/nhour)
plot(as.numeric(revenue_amj_all_reg_good$timeClicked - revenue_amj_all_reg_good$regCompleteDate)/nhour, type = "b")
hist(as.numeric(revenue_amj_all_reg_good$timeClicked - revenue_amj_all_reg_good$regCompleteDate)/nhour)
hist(as.numeric(revenue_amj_all_reg_good$timeClicked - revenue_amj_all_reg_good$regCompleteDate)/nminute)
nminute <- 60*1000
hist(as.numeric(revenue_amj_all_reg_good$timeClicked - revenue_amj_all_reg_good$regCompleteDate)/nminute)
hist(as.numeric(revenue_amj_all_reg_good$timeClicked - revenue_amj_all_reg_good$regCompleteDate)/1000)
range((revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate)/1000)
boxplot(as.numeric(revenue_amj_all_reg_good$timeClicked - revenue_amj_all_reg_good$regCompleteDate)/1000)
range((revenue_amj_all_reg_good$timeClicked - revenue_amj_all_reg_good$regCompleteDate)/1000)
summary(revenue_amj_new$numDaysSinceReg)
sum(is.na(revenue_amj_new$regCompleteDate))
table(revenue_amj_new$vendorName, revenue_amj_new$verticalName, revenue_amj_new$amount)
range(revenue_amj_new$amount)
range((revenue_amj_all_reg_good$timeClicked - revenue_amj_all_reg_good$regCompleteDate)/1000)
range((revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate)/1000) ## in sec
range((revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate)/nhour) ## in sec
boxplot(as.numeric(revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate)/nhour)
summary((revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate)/nhour)
summary(as.numeric(revenue_amj_all_reg_good$saleDateTime - revenue_amj_all_reg_good$regCompleteDate)/nhour)
summarise(group_by(revenue_amj_all_reg_good, vendorName), avg_time_to_purch = mean(as.numeric(saleDateTime - regCompleteDate)/nhour))
summarise(group_by(revenue_amj_all_reg_good, vendorName), avg_time_to_purch = mean(as.numeric(saleDateTime - regCompleteDate)/nhour), num = n())
summarise(group_by(revenue_amj_all_reg_good, vendorName),
avg_time_to_purch = mean(as.numeric(saleDateTime - regCompleteDate)/nhour),
num = n(),
tot_Sales = sum(amount))
revenue_amj_nonReg <- filter(revenue_amj_all, is.na(regCompleteDate))
revenue_amj_all <- cbind(revenue_amj_all, typeUser = rep("aaa", nrow(revenue_amj_all)))
revenue_amj_all <- transform(filter(revenue_amj_all, regCompleteDate >= ymd("150401"), typeUser = "New")
)
revenue_amj_all[revenue_amj_all$regCompleteDate >= ymd("150401"),"typeUser"] <- "New"
revenue_amj_all[revenue_amj_all$regCompleteDate >= ymd("150401" & !(is.na(revenue_amj_all$regCompleteDate))),"typeUser"] <- "New"
revenue_amj_all[revenue_amj_all$regCompleteDate >= ymd("150401"),"typeUser"] <- "New"
sum(revenue_amj_all$regCompleteDate >= ymd("150401"))
sum(revenue_amj_all$regCompleteDate >= ymd("150401") & !is.na(revenue_amj_all$regCompleteDate))
revenue_amj_all[revenue_amj_all$regCompleteDate >= ymd("150401") & !is.na(revenue_amj_all$regCompleteDate),"typeUser"] <- "New"
table(revenue_amj_all$typeUser)
revenue_amj_all <- cbind(revenue_amj, JSON5)
table(revenue_amj_all$typeUser)
revenue_amj_all <- cbind(revenue_amj_all, typeUser = rep("aaa", nrow(revenue_amj_all)))
table(revenue_amj_all$typeUser)
revenue_amj_all[revenue_amj_all$regCompleteDate >= ymd("150401") & !is.na(revenue_amj_all$regCompleteDate),"typeUser"] <- "New"
table(revenue_amj_all$typeUser)
revenue_amj_all[revenue_amj_all$regCompleteDate >= ymd("150401") & !is.na(revenue_amj_all$regCompleteDate),"typeUser"] <- c("New")
table(revenue_amj_all$typeUser)
revenue_amj_all <- cbind(revenue_amj, JSON5)
revenue_amj_all <- cbind(revenue_amj_all, typeUser = rep("aaa", nrow(revenue_amj_all)))
filter(revenue_amj_all, regCompleteDate >= ymd("150401") & !is.na(regCompleteDate)) <- "New"
revenue_amj_all <- cbind(revenue_amj, JSON5)
revenue_amj_all <- cbind(revenue_amj_all, typeUser = rep("aaa", nrow(revenue_amj_all)))
filter(revenue_amj_all, regCompleteDate >= ymd("150401") & !is.na(regCompleteDate)) <- "New"
revenue_amj_all <- cbind(revenue_amj, JSON5)
revenue_amj_all <- cbind(revenue_amj_all, typeUser = rep("aaa", nrow(revenue_amj_all)))
revenue_amj_new <- filter(revenue_amj_all, regCompleteDate >= ymd("150401"))
revenue_amj_exist <- filter(revenue_amj_all, regCompleteDate < ymd("150401"))
revenue_amj_nonReg <- filter(revenue_amj_all, is.na(regCompleteDate))
revenue_amj_new$typeUser <- "New"
revenue_amj_new$typeUser <- "New"
revenue_amj_exist$typeUser <- "Existing"
revenue_amj_nonReg$typeUser <- "Non registered"
revenue_amj_all_type <- bind_rows(revenue_amj_new, revenue_amj_exist, revenue_amj_nonReg)
table(revenue_amj_all_type$typeUser, revenue_amj_new$verticalName, revenue_amj_new$amount)
table(revenue_amj_all_type$typeUser, revenue_amj_all_type$verticalName, revenue_amj_all_type$amount)
summarise(group_by(revenue_amj_all_type, typeUser, vendorName, verticalName), avg_rev = mean(amount), tot_rev = sum(amount))
summarise(group_by(revenue_amj_all_type, typeUser, vendorName, verticalName), avg_rev = mean(amount), tot_rev = sum(amount), num = n())
View(summarise(group_by(revenue_amj_all_type, typeUser, vendorName, verticalName), avg_rev = mean(amount), tot_rev = sum(amount), num = n()))
table(revenue_amj_nonReg$store)
View(revenue_amj_nonReg)
table(revenue_amj_nonReg$store, revenue_amj_nonReg$storeType)
table(revenue_amj_nonReg$storeType, revenue_amj_nonReg$store)
revenue_amj_nonRegPub <- filter(revenue_amj_all, is.na(regCompleteDate) & storeType %in% "Public")
nrow(revenue_amj_nonRegPub)
nrow(revenue_amj_nonReg)
revenue_amj_nonReg <- filter(revenue_amj_all, is.na(regCompleteDate) & !(storeType %in% "Public"))
nrow(revenue_amj_nonReg)
table(revenue_amj_nonReg$storeType, revenue_amj_nonReg$store)
revenue_amj_nonRegPub$typeUser <- "Non registered sublic site"
revenue_amj_all_type <- bind_rows(revenue_amj_new, revenue_amj_exist, revenue_amj_nonRegPub, revenue_amj_nonReg)
range(revenue_amj_nonReg$saleDate)
nrow(revenue_amj_nonReg$saleDate)
length(revenue_amj_nonReg$saleDate)
length(revenue_amj_nonReg$timeClicked)
range(revenue_amj_nonReg$timeClicked)
hist(revenue_amj_nonReg$timeClicked)
strptime(as.character(revenue_amj_nonReg$saleDate[1]), "%y-%m-%d")
as.character(revenue_amj_nonReg$saleDate[1])
as.character(revenue_amj_nonReg$timeClicked[1])
strptime(as.character(revenue_amj_nonReg$timeClicked[1]), "%y-%m-%d")
strptime(as.character(revenue_amj_nonReg$timeClicked[1]))
strptime(as.character(revenue_amj_nonReg$timeClicked[1]), "%Y-%m-%d")
hist(strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d"))
hist(strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d"), breaks = )
random.dates <- as.Date("2001/1/1") + 70*stats::runif(100)
hist(random.dates, "weeks", format = "%d %b")
hist(strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d"), breaks = "days")
hist(strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d"), breaks = "weeks")
hist(strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d"), breaks = "weeks", format = "%d-%m")
table(revenue_amj_nonReg$vendorName)
hist(strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d"), breaks = "days", format = "%d-%m")
library(ggplot2)
ggplot(revenue_amj_nonReg, aes = (x=strptime(as.character(revenue_amj_nonReg$timeClicked), fill=vendorName))) + geom_histogram()
ggplot(revenue_amj_nonReg, aes(x=strptime(as.character(revenue_amj_nonReg$timeClicked), fill=vendorName))) + geom_histogram()
ggplot(revenue_amj_nonReg, aes(x=strptime(as.character(revenue_amj_nonReg$timeClicked), y=vendorName))) + geom_histogram()
ggplot(revenue_amj_nonReg, aes(x=strptime(as.character(revenue_amj_nonReg$timeClicked)), y=vendorName)) + geom_bar()
ggplot(revenue_amj_nonReg, aes(x=strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d"), y=vendorName)) + geom_bar()
ggplot(revenue_amj_nonReg, aes(x=strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d"), y=vendorName)) + geom_histogram()
?geom_histogram()
ggplot(revenue_amj_nonReg, aes(x=strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d"), y=vendorName)) + geom_histogram(stat = "bin")
ggplot(revenue_amj_nonReg, aes(x=strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d"), y=vendorName))
+ geom_histogram(stat = "bin", position = "stack")
ggplot(revenue_amj_nonReg, aes(x=strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d")))
+ geom_histogram(aes(fill=vendorName, stat = "bin", position = "stack")
)
ggplot(revenue_amj_nonReg, aes(x=strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d")))
+ geom_histogram(aes(fill=vendorName), stat = "bin", position = "stack")
ggplot(revenue_amj_nonReg, aes(x=strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d"), fill=vendorName))
+ geom_histogram(stat = "bin", position = "stack")
ggplot(revenue_amj_nonReg, aes(x=strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d"), fill=vendorName)) + geom_histogram(stat = "bin", position = "stack")
ggplot(revenue_amj_nonReg, aes(x=strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d"), fill=vendorName)) + geom_histogram()
ggplot(revenue_amj_nonReg, aes(x=strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d"))) + geom_histogram(aes(fill=vendorName), stat = "bin", position = "stack")
revenue_amj_nonReg_graph <- filter(revenue_amj_nonReg, revenue_amj_nonReg$timeClicked > "2015-06-05")
nrow(revenue_amj_nonReg_graph)
revenue_amj_nonReg_graph <- mutate(revenue_amj_nonReg_graph, dateClicked = strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d"))
revenue_amj_nonReg_graph <- mutate(revenue_amj_nonReg_graph, dateClicked = as.character(strptime(as.character(revenue_amj_nonReg$timeClicked), "%Y-%m-%d")))
revenue_amj_nonReg_graph <- mutate(revenue_amj_nonReg_graph, dateClicked = as.character(strptime(as.character(revenue_amj_nonReg_graph$timeClicked), "%Y-%m-%d")))
ggplot(revenue_amj_nonReg_graph, aes(x=dateClicked, fill=vendorName)) + geom_histogram()
revenue_amj_all_graph <- filter(revenue_amj_all, timeClicked > "2015-06-05")
revenue_amj_all_graph <- mutate(revenue_amj_all_graph, dateClicked = as.character(strptime(as.character(timeClicked), "%Y-%m-%d")))
ggplot(revenue_amj_all_graph, aes(x=dateClicked, fill=vendorName)) + geom_histogram()
ggplot(revenue_amj_all, aes(x=saleDate, fill=vendorName)) + geom_histogram()
hist(revenue_amj_all$saleDate, breaks = "days", format = "%d-%m")
ggplot(revenue_amj_all, aes(x=saleDate, fill=vendorName)) + geom_histogram()
revenue_amj_all_graph <- filter(revenue_amj_all, salesDate > "2015-06-05")
ggplot(revenue_amj_all, aes(x=saleDate, fill=vendorName)) + geom_histogram()
revenue_amj_all_graph <- filter(revenue_amj_all, saleDate > "2015-06-05")
ggplot(revenue_amj_all, aes(x=saleDate, fill=vendorName)) + geom_histogram()
ggplot(revenue_amj_all_graph, aes(x=saleDate, fill=vendorName)) + geom_histogram()
View(summarise(group_by(revenue_amj_all_type, typeUser, vendorName, verticalName), avg_rev = mean(amount), tot_rev = sum(amount), num = n()))
View(summarise(group_by(revenue_amj_all_type, typeUser, vendorName, verticalName, salesDate), avg_rev = mean(amount), tot_rev = sum(amount), num = n()))
View(summarise(group_by(revenue_amj_all_type, typeUser, vendorName, verticalName, saleDate), avg_rev = mean(amount), tot_rev = sum(amount), num = n()))
revenue_amj_all <- cbind(revenue_amj_all, typeUser = rep("aaa", nrow(revenue_amj_all)))
revenue_amj_new <- filter(revenue_amj_all, regCompleteDate >= ymd("150401"))
revenue_amj_exist <- filter(revenue_amj_all, regCompleteDate < ymd("150401"))
revenue_amj_nonRegPub <- filter(revenue_amj_all, is.na(regCompleteDate) & storeType %in% "Public")
revenue_amj_nonReg <- filter(revenue_amj_all, is.na(regCompleteDate) & !(storeType %in% "Public"))
revenue_amj_all <- cbind(revenue_amj, JSON5)
revenue_amj_all <- cbind(revenue_amj_all, typeUser = rep("aaa", nrow(revenue_amj_all)))
revenue_amj_new <- filter(revenue_amj_all, regCompleteDate >= ymd("150401"))
revenue_amj_exist <- filter(revenue_amj_all, regCompleteDate < ymd("150401"))
revenue_amj_nonRegPub <- filter(revenue_amj_all, is.na(regCompleteDate) & storeType %in% "Public")
revenue_amj_nonReg <- filter(revenue_amj_all, is.na(regCompleteDate) & !(storeType %in% "Public"))
revenue_amj_new$typeUser <- "New"
revenue_amj_exist$typeUser <- "Existing"
revenue_amj_nonRegPub$typeUser <- "Non registered sublic site"
revenue_amj_nonReg$typeUser <- "Non registered"
revenue_amj_all_type <- bind_rows(revenue_amj_new, revenue_amj_exist, revenue_amj_nonRegPub, revenue_amj_nonReg)
View(summarise(group_by(revenue_amj_all_type, typeUser, vendorName, verticalName, saleDate), avg_rev = mean(amount), tot_rev = sum(amount), num = n()))
nrow(revenue_amj_all_type)
View(summarise(group_by(revenue_amj_all_type, typeUser, vendorName, verticalName, saleDate), avg_rev = mean(amount), tot_rev = sum(amount), num = n(userToken)))
View(summarise(group_by(revenue_amj_all_type, typeUser, vendorName, verticalName, saleDate),
avg_rev = mean(amount), tot_rev = sum(amount), num = count(userToken))
)
nrow(revenue_amj_all_type)
View(summarise(group_by(revenue_amj_all_type, typeUser, vendorName, verticalName, saleDate),
avg_rev = mean(amount), tot_rev = sum(amount),  num = n()))
x <- summarise(group_by(revenue_amj_all_type, typeUser, vendorName, verticalName, saleDate),
avg_rev = mean(amount), tot_rev = sum(amount),  num = n())
write.table(x, "clipboard", sep="\t", row.names=FALSE, col.names=TRUE)
write.csv(x, "clipboard", sep="\t", row.names=FALSE, col.names=TRUE, )
write.table(x, pipe("pbcopy"), sep="\t", row.names=FALSE, col.names=TRUE)
y <- count(revenue_amj_all_type)
head(y)
y <- count(revenue_amj_all_type, vendorName)
head(y)
View(y)
names(y) <- tot_cnt_vendor
names(y) <- "tot_cnt_vendor"
View(y)
names(y) <- c("vendorName", "tot_cnt_vendor")
z <- inner_join(revenue_amj_all_type, y, by = vendorName)
names(y)
tot_by_vendor <- count(revenue_amj_all_type, vendorName)
names(tot_by_vendor) <- c("vendorName", "tot_cnt_vendor")
y <- inner_join(revenue_amj_all_type, tot_by_vendor, by = "vendorName")
z <- summarise(group_by(y, vendorName, saleDate),
num = n(), pct_tot = n()/max(tot_cnt_vendor))
View(z)
write.table(z, file="pbcopy", sep="\t", row.names=FALSE, col.names=TRUE)
write.table(z, pipe("pbcopy"), sep="\t", row.names=FALSE, col.names=TRUE)
line(x=z$saleDate, y=z$pct_tot)
lines(x=z$saleDate, y=z$pct_tot)
plot(x=z$saleDate, y=z$pct_tot)
plot(x=z$saleDate, y=z$pct_tot, type = "l")
plot(x=z$saleDate, y=z$pct_tot, type = "p")
ggplot(z, aes(saleDate, color=vendorName)) + geomfreqpoly()
ggplot(z, aes(saleDate, color=vendorName)) + geom_density()
ggplot(z, aes(saleDate, num, color=vendorName)) + geom_density()
ggplot(z, aes(x=saleDate, y=num, color=vendorName)) + geom_density()
ggplot(z, aes(saleDate, num, color=vendorName)) + geom_freqpoly()
ggplot(z, aes(saleDate, color=vendorName)) + geom_freqpoly()
ggplot(z, aes(saleDate, num, color=vendorName)) + geom_line()
save.image("~/Desktop/Consulting/Credit Sesame/Work/Board Numbers/datasets.RData")
